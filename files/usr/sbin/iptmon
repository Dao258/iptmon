#!/bin/sh
# set -x

BACKUP_TABLE=/etc/iptmon_backup.ipt
BACKUP_TABLE_6=/etc/iptmon_backup6.ipt
TABLE=$(mktemp -p /tmp -u iptmon_XXXXXX)

LEASE_FILE=$(uci get dhcp.@dnsmasq[0].leasefile)

CHAIN_FW_TX="iptmon_tx"
CHAIN_FW_RX="iptmon_rx"
CHAIN_INPUT="iptmon_input"
CHAIN_OUTPUT="iptmon_output"

IPTABLES="/usr/sbin/iptables"

usage() {
	cat <<EOF

$0 init
	initialize iptmon chains

$0 [ add | old | del | arp-add | arp-old | arp-del ]
	dnsmasq functions to add / remove entries

$0 flush
	flush all iptmon chain entries

$0 remove
	remove iptmon chains and restore original mangle table
EOF
}

commit() {
	echo "COMMIT" >> $TABLE
	iptables-restore -T mangle < $TABLE
	ip6tables-restore -T mangle < $TABLE
}

backup_orig() {
	test -f $BACKUP_TABLE || iptables-save -t mangle > $BACKUP_TABLE
	test -f $BACKUP_TABLE_6 || ip6tables-save -t mangle > $BACKUP_TABLE_6
}

restore_orig() {
	iptables-restore -T mangle < $BACKUP_TABLE
	ip6tables-restore -T mangle < $BACKUP_TABLE_6
	rm -f $BACKUP_TABLE $BACKUP_TABLE_6
}

init_chain() {
 cat <<-EOF >> $TABLE
		*mangle
		:PREROUTING ACCEPT
		:INPUT ACCEPT
		:FORWARD ACCEPT
		:OUTPUT ACCEPT
		:POSTROUTING ACCEPT
		:$CHAIN_FW_TX - [0:0]
		:$CHAIN_FW_RX - [0:0]
		:$CHAIN_INPUT - [0:0]
		:$CHAIN_OUTPUT - [0:0]
		-A INPUT -j $CHAIN_INPUT
		-A FORWARD -j $CHAIN_FW_TX
		-A FORWARD -j $CHAIN_FW_RX
		-A OUTPUT -j $CHAIN_OUTPUT
		-F $CHAIN_FW_TX
		-F $CHAIN_FW_RX
	EOF
}

finalize_chain() {
	cat <<-EOF >> $TABLE
		-A $CHAIN_INPUT -j RETURN
		-A $CHAIN_OUTPUT -j RETURN
	EOF
}

_cleanup() {
	rm -f $TABLE
}

test_family() {
	if { printf "%s" $1 | grep -q ":"; } ; then
		IPTABLES="/usr/sbin/ip6tables"
		FAMILY=6
	fi
}

dnsmasq_add() {
	mac=$1
	ip=$2
	host=${3:-$ip}
	test_family $ip

	# If the rule exists, replace it, making sure we have the most up-to-date address.
	# Needed particularly for IPv6 as clients decide to use SLAAC addresses instead of
	# DHCP-assigned, updating the neighbor table as addresses rotate.
	for chain in $CHAIN_FW_TX $CHAIN_FW_RX; do
		case $chain in
		$CHAIN_FW_TX)
			SRC_DST='-d'
			PREFIX='tx'
		;;
		$CHAIN_FW_RX)
			SRC_DST='-s'
			PREFIX='rx'
		;;
		esac

		EXISTING=$($IPTABLES -t mangle -nL $chain --line-numbers | grep $host | awk '{print $1}' ) 
		if [[ ${EXISTING}x != 'x' ]] ; then # i.e. if $EXISTING is anything other than null
			printf 'removing existing rule for %s\n' $host
			$IPTABLES -t mangle -D $chain $EXISTING
		fi
		$IPTABLES -t mangle -A $chain $SRC_DST $ip -j RETURN -m comment --comment "${PREFIX}_${host}"
	done

	printf "added iptmon entry for %s %s" "${ip}" "${host}"
}

dnsmasq_arp_add() {
	mac=$1
	ip=$2
	# ignore link-local addresses (hacky)
	test "${ip:0:4}" == "fe80" && exit 0
	# ignore ULA address (hacky)
	ula_prefix="$(uci get network.globals.ula_prefix 2>/dev/null)"
	test "${ip:0:4}" == "${ula_prefix:0:4}" && exit 0

	host=$( grep $mac $LEASE_FILE | awk '{print $4}' )
	test "${host}x" == 'x' || dnsmasq_add $mac $ip $host
}

dnsmasq_del() {
	mac=$1
	ip=$2
	host=${3:-$ip}
	test_family $ip

	$IPTABLES -t mangle -nL "${CHAIN_FW_TX}" | grep -q "${ip}" && exit 0
	$IPTABLES -t mangle -D "${CHAIN_FW_TX}" -d "${ip}" -j RETURN -m comment --comment "tx_${host}"

	$IPTABLES -t mangle -nL "${CHAIN_FW_TX}" | grep -q "${ip}" && exit 0
	$IPTABLES -t mangle -D "${CHAIN_FW_RX}" -s "${ip}" -j RETURN -m comment --comment "rx_${host}"

	printf "deleted iptmon entry for %s %s" "${ip}" "${host}"
}

dnsmasq_arp_del() {
	mac=$1
	ip=$2
	host=$( grep $mac $LEASE_FILE | awk '{print $4}' )
	dnsmasq_del $mac $ip $host
}

test "$(id -u)" -eq 0 || { echo "must be root"; exit 1; }
trap _cleanup EXIT

case $1 in
	"init")
		backup_orig
		init_chain
		finalize_chain
		commit
	;;
	"add")
		shift
		dnsmasq_add "$@"
	;;
	"arp-add")
		shift
		dnsmasq_arp_add "$@"
	;;
	"old")
		shift
		dnsmasq_add "$@"
	;;
	"arp-old")
		shift
		dnsmasq_add "$@"
	;;
	"del")
		shift
		dnsmasq_del "$@"
	;;
	"arp-del")
		shift
		dnsmasq_arp_del "$@"
	;;
	"flush")
		for chain in $CHAIN_FW_TX $CHAIN_FW_RX; do
			for cmd in iptables ip6tables; do
				$cmd -t mangle -F $chain
			done
		done
	;;
	"remove")
		restore_orig
	;;
 *)
	usage
	;;
esac